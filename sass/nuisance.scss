@import "utils.scss";

$NUISANCE_TYPE_COUNT: 6;
$RECALC_DURATION: custom_field('queue_recalc_anim_duration') + ms;
$NUISANCE_ICON_NORMAL_SIZE: 72px;

.nuisance {
    /* vertically centering nuisance */
    @include valign;

    /* each .nuisance is fixed size, but the nuisance *
     * image can be bigger than that and overflows    */
    overflow: visible;

    /* width of the queue can change during recalc animation, *
     * so let's rely on the height and use aspect ratio to    *
     * maintain the dimension of nuisance                     */
    height: 100%;

    @for $type from 0 through $NUISANCE_TYPE_COUNT {
        .nuisance-type-#{$type} {
            content: url64('../images/nuisance/' + $type + '.png');
            // hate to do this but the reality is, comet is bigger
            height: if($type == 0, calc(110 / 72 * 100%), 100%);
            position: absolute;

            @include valign;
        }
    }
}

.nuisance_effect, #nuisance_queue {
    /* 6 nuisance to be displayed, 1 line, *
     * nuisance icons are always squares   */
    @include aspect_ratio(6, 1);

    /* on recalc animation, the queue resizes,             *
     * this keeps the queue in the center of its container */
    @include halign;

    /* visually vertically centers icons in queue */
    @include valign;

    /* leaves room on both sides of the queue *
     * so the icons look better contained     */
    width: 95%;
}

@keyframes queue_recalc {
    from { width: 100%; }
    to   { width: 0;    }
}

#nuisance_queue {
    &.animate {
        animation: queue_recalc $RECALC_DURATION alternate 2 linear;
    }
}
